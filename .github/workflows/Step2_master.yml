name: Master and Releaser Workflow

on:
  push:
    branches:
      - master

jobs:
  tag_and_release:
    runs-on: ubuntu-latest
    name: Create Release Tag
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Node Environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci --include=dev

      - name: Build the application
        run: npm run build

      - name: Create a new version and release
        id: release
        run: |
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create and push version tag
        if: steps.release.outputs.version != ''
        run: |
          TAG_NAME=v${{ steps.release.outputs.version }}
          git tag $TAG_NAME
          git push origin $TAG_NAME

  build_and_push:
    needs: tag_and_release  # Waits for the tag_and_release job to finish
    runs-on: ubuntu-latest
    name: Build and Push Docker Image
    if: github.ref_type == 'tag' && startsWith(github.ref, 'refs/tags/v')  # Runs only for tag pushes
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      - name: Build the application
        run: npm run build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container versioned image
        run: |
          VERSION=$(echo "${GITHUB_REF}" | sed -e 's|refs/tags/v||')
          IMAGE_NAME="ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]'):${VERSION}"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Build and push container latest image
        run: |
          IMAGE_NAME="ghcr.io/$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]'):latest"
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME
